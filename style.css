/* GLOBAL RESETS & FONT */
* { box-sizing: border-box; margin: 0; padding: 0; }
html {
  /* Define Color Variables */
  --bg-color: #f2f2f2;
  --text-color: #333;
  --container-bg: #fff;
  --container-shadow: rgba(0,0,0,0.1);
  --primary-color: #007bff;
  --primary-hover: #0056b3;
  --primary-active: #004494;
  --secondary-color: #28a745;
  --secondary-hover: #218838;
  --secondary-active: #1e7e34;
  --border-color: #ccc;
  --input-bg: #fafafa;
  --input-border: #ccc;
  --status-bg: #f9f9f9;
  --status-border: #ddd;
  --status-text: #555;
  --highlight-bg: #fff89a; /* Default light mode */
  --highlight-border: #ffd347; /* Default light mode */
  /* New variables for dynamic highlight */
  --current-highlight-bg: var(--highlight-bg);
  --current-highlight-border: var(--highlight-border);
  --modal-bg: #fff;
  --modal-shadow: rgba(0, 0, 0, 0.3);
  --modal-overlay-bg: rgba(0, 0, 0, 0.5);
  --modal-close-color: #888;
  --modal-close-hover: #333;
  --button-text-color: #fff;
  --disabled-bg: #ccc;
  --disabled-text: #666; /* Optional: Change text color too */
}

html.dark-mode {
  --bg-color: #212529;
  --text-color: #e9ecef;
  --container-bg: #343a40;
  --container-shadow: rgba(255,255,255,0.1);
  --primary-color: #0d6efd; /* Keep primary, or adjust if needed */
  --primary-hover: #0b5ed7;
  --primary-active: #0a58ca;
  --secondary-color: #198754; /* Keep secondary, or adjust */
  --secondary-hover: #157347;
  --secondary-active: #146c43;
  --border-color: #6c757d;
  --input-bg: #495057;
  --input-border: #6c757d;
  --status-bg: #495057;
  --status-border: #6c757d;
  --status-text: #ced4da;
  /* Removed specific dark mode highlight vars - will be set dynamically */
  /* --highlight-bg: #495057; */
  /* --highlight-border: #ffc107; */
  --modal-bg: #343a40;
  --modal-shadow: rgba(255, 255, 255, 0.15);
  --modal-overlay-bg: rgba(0, 0, 0, 0.7);
  --modal-close-color: #adb5bd;
  --modal-close-hover: #f8f9fa;
  --button-text-color: #fff;
  --disabled-bg: #6c757d;
  --disabled-text: #adb5bd;
}


html, body { height: 100%; }
body {
  font-family: 'Open Sans', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  height: 100%; /* Ensure body takes full height */
  overflow: hidden; /* Prevent body scrollbars */
  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth theme transition */
}
/* MAIN CONTAINER: Lock to viewport height */
.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 900px;
  /* Use CSS variable for height, fallback to 100vh */
  height: var(--app-height, 100vh);
  margin: 0 auto;
  padding: 16px; /* Base padding */
  background: var(--container-bg);
  border-radius: 8px;
  box-shadow: 0 2px 8px var(--container-shadow);
  overflow: hidden; /* Restore: Prevent container scroll, force internal scroll */
  transition: background-color 0.3s ease;
}
h1 {
  margin-bottom: 8px;
  font-size: 1.5rem;
  text-align: center;
  font-weight: 600;
  color: var(--text-color);
}
/* TOP BAR */
#topBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
  flex-wrap: nowrap; /* keep one row */
}
#voiceSelect {
  padding: 0.4rem;
  border: 1px solid var(--input-border);
  background-color: var(--input-bg);
  color: var(--text-color);
  border-radius: 4px;
  font-size: 1rem;
  min-height: 40px;
}
#refreshVoicesBtn {
  padding: 0.4rem 0.8rem;
  background-color: var(--primary-color);
  border: none;
  color: var(--button-text-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  min-height: 40px;
  margin-left: 4px;
  transition: background-color 0.2s ease;
}
#refreshVoicesBtn:hover { background-color: var(--primary-hover); }
#refreshVoicesBtn:active { background-color: var(--primary-active); }
#refreshVoicesBtn:disabled {
  background-color: var(--disabled-bg);
  color: var(--disabled-text);
  cursor: not-allowed;
}
#advancedToggle {
  background: none;
  border: none;
  font-size: 1.8rem;
  cursor: pointer;
  color: var(--text-color); /* Use text color */
  opacity: 0.7;
  padding: 0.4rem;
  min-height: 40px;
  transition: opacity 0.2s ease;
}
#advancedToggle:hover { opacity: 1; }

/* MODE SELECTOR & ACTION BUTTONS */
#modeAndActions {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
  gap: 8px;
  /* Add some visual separation */
  border: 1px solid var(--border-color); /* Use variable */
  padding: 8px;
  border-radius: 4px;
  margin-bottom: 8px;
}
#modeSelector { display: flex; gap: 8px; align-items: center; }
#modeSelector label { font-size: 1rem; cursor: pointer; }
#manualControls, #uploadSection {
  display: flex;
  gap: 8px;
  align-items: center;
}
#processTextBtn, #clearTextBtn, #chooseFileBtn {
  padding: 0.4rem 0.8rem;
  background-color: var(--secondary-color); /* Use variable */
  border: none;
  color: var(--button-text-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  min-height: 40px;
  transition: background-color 0.2s ease;
}
#processTextBtn:hover, #clearTextBtn:hover, #chooseFileBtn:hover {
  background-color: var(--secondary-hover);
}
#processTextBtn:active, #clearTextBtn:active, #chooseFileBtn:active {
  background-color: var(--secondary-active);
}
#fileInput { display: none; }

/* MODAL STYLES */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-overlay-bg); /* Use variable */
  z-index: 100; /* Below modal, above content */
  display: none; /* Hidden by default */
  opacity: 0;
  transition: opacity 0.3s ease;
}
.modal-overlay.visible {
  display: block;
  opacity: 1;
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.9); /* Start slightly scaled down */
  background-color: var(--modal-bg); /* Use variable */
  color: var(--text-color); /* Ensure text inside modal is readable */
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 5px 15px var(--modal-shadow); /* Use variable */
  z-index: 101; /* Above overlay */
  width: 90%;
  max-width: 500px;
  display: none; /* Hidden by default */
  opacity: 0;
  transition: opacity 0.3s ease, transform 0.3s ease;
}
.modal.visible {
  display: block;
  opacity: 1;
  transform: translate(-50%, -50%) scale(1); /* Scale to full size */
}

.modal h2 {
  margin-top: 0;
  margin-bottom: 15px;
  font-size: 1.3rem;
  text-align: center;
  color: var(--text-color); /* Ensure heading is readable */
}

.modal-content {
  display: flex;
  flex-direction: column;
  gap: 10px; /* Space between settings */
}
.modal-content label {
  font-weight: 600;
  margin-bottom: -5px; /* Reduce space after label */
}
.modal-content input[type="text"],
.modal-content input[type="number"] {
  padding: 8px;
  border: 1px solid var(--input-border);
  background-color: var(--input-bg);
  color: var(--text-color);
  border-radius: 4px;
  font-size: 1rem;
}

.modal-close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  font-size: 1.8rem;
  line-height: 1;
  cursor: pointer;
  color: var(--modal-close-color);
  transition: color 0.2s ease;
}
.modal-close-btn:hover {
  color: var(--modal-close-hover);
}

/* Toggle Switch Styles */
.setting-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.switch {
  position: relative;
  display: inline-block;
  width: 50px; /* Adjust size as needed */
  height: 24px;
}
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
}
.slider:before {
  position: absolute;
  content: "";
  height: 18px; /* Adjust size */
  width: 18px;
  left: 3px; /* Adjust position */
  bottom: 3px;
  background-color: white;
  transition: .4s;
}
input:checked + .slider {
  background-color: var(--primary-color);
}
input:focus + .slider {
  box-shadow: 0 0 1px var(--primary-color);
}
input:checked + .slider:before {
  transform: translateX(26px); /* Adjust distance */
}
.slider.round {
  border-radius: 24px; /* Make it round */
}
.slider.round:before {
  border-radius: 50%;
}


/* TEXT CONTAINER */
#textContainer {
  /* Let it grow and shrink, taking available space */
  flex: 1 1 auto;
  overflow-y: auto; /* Enable scrolling *within* the container */
  border: 1px solid var(--border-color);
  /* Keep padding, but remove the large bottom padding added previously */
  padding: 10px;
  border-radius: 4px;
  background-color: var(--input-bg); /* Use input bg for consistency */
  margin-bottom: 8px;
  white-space: pre-wrap;
  user-select: text; /* Allow text selection */
  outline: none; /* Remove default outline, maybe add focus style */
  font-size: var(--text-container-font-size, 1rem); /* Use CSS variable, default 1rem */
  line-height: 1.7; /* Increased spacing */
}
.sentenceSpan {
  cursor: pointer;
  display: inline; /* Keep inline for text flow */
  white-space: pre-wrap;
  padding: 2px 0; /* Add slight vertical padding for touch */
  transition: background-color 0.2s ease;
}
/* No specific hover for dark mode needed if using variables */
.highlight {
  /* Use the dynamic variables */
  background-color: var(--current-highlight-bg) !important;
  border: 2px solid var(--current-highlight-border) !important;
  padding: 2px 4px !important;
  border-radius: 4px;
}

/* STATUS BAR: Placed above playback controls */
#statusBar {
  border: 1px solid var(--status-border); /* Use variable */
  padding: 8px;
  background-color: var(--status-bg); /* Use variable */
  border-radius: 4px;
  text-align: center;
  font-size: 0.9rem; /* Slightly smaller */
  color: var(--status-text); /* Use variable */
  flex: 0 0 auto; /* Don't grow or shrink */
  margin-bottom: 8px; /* Space before controls */
  /* Accessibility */
  /* aria-live="polite" is set in HTML */
}

/* PLAYBACK CONTROLS (at bottom) */
#controls {
  /* Removed position: sticky and related properties */
  background: var(--container-bg); /* Match container bg */
  padding: 8px;
  border-top: 1px solid var(--border-color); /* Use variable */
  display: flex;
  gap: 8px;
  /* Removed flex-shrink: 0; */
}
#controls button {
  padding: 0.4rem 0.8rem;
  background-color: var(--primary-color);
  border: none;
  color: var(--button-text-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  min-height: 40px;
  flex: 1; /* Make buttons fill space */
  transition: background-color 0.2s ease;
}
#controls button:hover { background-color: var(--primary-hover); }
#controls button:active { background-color: var(--primary-active); }
#controls button:disabled {
  background-color: var(--disabled-bg);
  color: var(--disabled-text);
  cursor: not-allowed;
}

  /* MOBILE ADJUSTMENTS */
@media (max-width: 600px) {
  .container {
    padding: 8px; /* Reset padding for mobile */
    padding-bottom: 60px; /* Add padding to prevent overlap with fixed controls (approx height) */
    border-radius: 0;
    /* height: 100vh; */ /* Height is handled by --app-height now */
    /* Flex properties already set */
  }
  h1 { font-size: 1.2rem; margin-bottom: 4px; }
  #topBar { flex-direction: row; gap: 4px; padding-top: 4px; padding-bottom: 4px;}
  #voiceSelect, #refreshVoicesBtn { min-height: 44px; font-size: 1rem; }
  #advancedToggle { font-size: 2rem;  }
  /* Removed conflicting height rule for .container on mobile:
     .container {
       height: auto;
       min-height: 100vh;
     }
     The rule outside the media query (.container { height: 100vh; }) should now apply correctly.
  */
  #modeAndActions { flex-direction: column; gap: 8px; /* Increased gap */ }
  #modeSelector { width: 100%; flex-direction: row; gap: 8px; justify-content: center; }
  #manualControls, #uploadSection { width: 100%; flex-direction: row; gap: 8px; }
  #processTextBtn, #clearTextBtn, #chooseFileBtn { width: 100%; min-height: 44px; font-size: 1rem; }
  /* Text container adjustments */
  #textContainer {
    /* Font size is now controlled by the CSS variable */
    line-height: 1.8; /* Increased line height for touch */
    flex: 1 1 auto; /* Ensure it takes available space */
    height: auto; /* Let flexbox determine height */
    margin-bottom: 4px;
    /* Padding is handled by the main rule now */
  }
   .sentenceSpan {
     padding: 4px 0; /* More vertical padding on mobile */
   }
  #controls {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    /* Re-apply background and border-top for fixed element */
    background: var(--container-bg);
    border-top: 1px solid var(--border-color);
    /* Ensure padding is applied */
    padding: 8px;
    /* Limit width and center if needed */
    max-width: 600px; /* Optional: constrain width */
    margin: 0 auto; /* Center if max-width is applied */
    /* Keep flex properties */
    font-size: 1rem;
    gap: 8px;
    z-index: 10; /* Ensure it's above other content */
   }
  #controls button { min-height: 44px; font-size: 1rem; }
  /* Status Bar: Keep in flow, above controls */
  #statusBar {
    position: static; /* Remove fixed positioning */
    margin: 0 0 8px 0; /* Adjust margin */
    z-index: auto;
    /* Removed order: 5; - rely on source order */
  }
   /* Removed explicit ordering - rely on source order */
   /* .container > * { order: 0; } */
   /* #textContainer { order: 4; } */
   /* #controls { order: 6; } */
}
